name: PR Checks

on:
  pull_request:
    branches: ['**']
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read
  statuses: write
  checks: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Run tests
        run: yarn test
        env:
          CI: true

      - name: Run linting
        run: yarn lint

  validate-typescript:
    name: TypeScript Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: TypeScript Check
        run: yarn tsc --noEmit

  analyze-dependencies:
    name: Dependency Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check for vulnerabilities
        run: yarn audit
        continue-on-error: true # Don't fail the build on vulnerabilities, just report them

  test-github-action:
    name: Test GitHub Action
    runs-on: ubuntu-latest
    needs: [build-and-test]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the action
        run: yarn build

      - name: Test action on popular repositories
        id: test-action
        uses: ./
        with:
          repository: 'facebook/react'
          output-file: 'react-analysis.md'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify action output
        run: |
          if [ ! -f "react-analysis.md" ]; then
            echo "Error: Output file was not created"
            exit 1
          fi

          if [ ! -s "react-analysis.md" ]; then
            echo "Error: Output file is empty"
            exit 1
          fi

          echo "GitHub Action successfully analyzed repository and generated report"

          # Check that the action outputs contain expected values
          if [ -z "${{ steps.test-action.outputs.risk-score }}" ]; then
            echo "Error: Missing risk-score output"
            exit 1
          fi

          if [ -z "${{ steps.test-action.outputs.risk-rating }}" ]; then
            echo "Error: Missing risk-rating output"
            exit 1
          fi

          echo "GitHub Action outputs verified successfully"

      - name: Upload analysis artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-action-test-results
          path: react-analysis.md
          retention-days: 7

  comment-pr-status:
    name: Comment PR Status
    runs-on: ubuntu-latest
    needs: [build-and-test, validate-typescript, analyze-dependencies, test-github-action]
    if: always() # Run even if previous jobs have failed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate PR Comment
        id: pr-comment
        uses: actions/github-script@v6
        env:
          BUILD_STATUS: ${{ needs.build-and-test.result }}
          TS_STATUS: ${{ needs.validate-typescript.result }}
          DEP_STATUS: ${{ needs.analyze-dependencies.result }}
          ACTION_STATUS: ${{ needs.test-github-action.result }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const buildStatus = process.env.BUILD_STATUS;
            const tsStatus = process.env.TS_STATUS;
            const depStatus = process.env.DEP_STATUS;
            const actionStatus = process.env.ACTION_STATUS;

            function getStatusEmoji(status) {
              switch(status) {
                case 'success': return '✅';
                case 'failure': return '❌';
                case 'cancelled': return '⚠️';
                default: return '⚠️';
              }
            }

            const statusTable = `
            | Check | Status |
            | ----- | ------ |
            | Build and Test | ${getStatusEmoji(buildStatus)} |
            | TypeScript Validation | ${getStatusEmoji(tsStatus)} |
            | Dependency Analysis | ${getStatusEmoji(depStatus)} |
            | GitHub Action Test | ${getStatusEmoji(actionStatus)} |
            `;

            const allPassed = buildStatus === 'success' && tsStatus === 'success' && actionStatus === 'success';
            const conclusion = allPassed 
              ? '✨ All required checks have passed!' 
              : '⚠️ Some checks have failed. Please review the issues above.';

            const comment = `## PR Check Results

            ${statusTable}

            ${conclusion}

            *Automated comment from GitHub Actions*
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
